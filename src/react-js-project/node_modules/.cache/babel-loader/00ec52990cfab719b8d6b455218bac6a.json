{"ast":null,"code":"var _jsxFileName = \"/home/huber/todo-app/src/components/todo/ListTodosComponent.js\";\nimport React from 'react';\nimport AuthenticationService from './AuthenticationService';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport moment from 'moment';\n\nclass ListTodosComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      message: null\n    };\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.id === -1) {\n      return;\n    }\n\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: \"Delete of todo \".concat(id, \" successfully.\")\n      });\n      this.refreshTodos();\n    });\n  }\n\n  updateTodoClicked(id) {\n    this.props.history.push(\"/todos/\".concat(id));\n  }\n\n  addTodoClicked() {\n    this.props.history.push(\"/todos/-1\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"List Todos\"), this.state.message && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Target Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Is Completed?\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.todos.map(todo => React.createElement(\"tr\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, todo.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, todo.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, todo.done.toString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, moment(todo.targetDate).format('YYYY-MM-DD')), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.updateTodoClicked(todo.id),\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.deleteTodoClicked(todo.id),\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Delete\")))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.addTodoClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/home/huber/todo-app/src/components/todo/ListTodosComponent.js"],"names":["React","AuthenticationService","TodoDataService","moment","ListTodosComponent","Component","constructor","props","state","todos","message","deleteTodoClicked","bind","refreshTodos","updateTodoClicked","addTodoClicked","componentDidMount","id","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","deleteTodo","history","push","render","map","todo","description","done","toString","targetDate","format"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AuthenticationService from './AuthenticationService';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport moment from 'moment';\n\nclass ListTodosComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: [],\n            message: null\n        }\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n        this.refreshTodos = this.refreshTodos.bind(this);\n        this.updateTodoClicked = this.updateTodoClicked.bind(this);\n        this.addTodoClicked = this.addTodoClicked.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.state.id === -1) {\n            return;\n        }\n        let username = AuthenticationService.getLoggedInUserName();\n        TodoDataService.retrieveAllTodos(username)\n        .then(\n            response => {\n                this.setState({ todos: response.data })\n            }\n        )\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName();\n        TodoDataService.retrieveAllTodos(username)\n        .then(\n            response => {\n                this.setState({ todos: response.data })\n            }\n        )\n    }\n\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName();\n        TodoDataService.deleteTodo(username, id)\n        .then(\n            response => {\n                this.setState({message: `Delete of todo ${id} successfully.`});\n                this.refreshTodos();\n            }\n        )\n    }\n\n    updateTodoClicked(id) {\n        this.props.history.push(`/todos/${id}`);\n    }\n\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>List Todos</h1>\n                { this.state.message && <div className=\"alert alert-success\">{this.state.message}</div> }\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>id</th>\n                                <th>description</th>\n                                <th>Target Date</th>\n                                <th>Is Completed?</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo =>\n                                    <tr key={todo.id}>\n                                        <td>{todo.id}</td>\n                                        <td>{todo.description}</td>\n                                        <td>{todo.done.toString()}</td>\n                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                        <td><button onClick={() => this.updateTodoClicked(todo.id)} className=\"btn btn-success\">Update</button></td>\n                                        <td><button onClick={() => this.deleteTodoClicked(todo.id)} className=\"btn btn-warning\">Delete</button></td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                            <button className=\"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ListTodosComponent;"]},"metadata":{},"sourceType":"module"}