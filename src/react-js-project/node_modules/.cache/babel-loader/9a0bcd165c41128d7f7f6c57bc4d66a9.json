{"ast":null,"code":"var _jsxFileName = \"/home/huber/todo-app/src/components/todo/LoginComponent.js\";\nimport React from 'react';\n\nclass LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'user',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    if (this.state.username === 'user' && this.state.password === '1234') {\n      this.props.history.push(\"/welcome/\".concat(this.state.username));\n      this.setState({\n        showSuccessMessage: true\n      });\n    } else {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ShowInvalidCredentials, {\n      hasLoginFailed: this.state.hasLoginFailed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(ShowLoginSuccessMessage, {\n      showSuccessMessage: this.state.showSuccessMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}\n\nfunction ShowInvalidCredentials(props) {\n  if (props.hasLoginFailed) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Invalid Credentials\");\n  }\n\n  return null;\n}\n\nfunction ShowLoginSuccessMessage(props) {\n  if (props.showSuccessMessage) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Login Successful.\");\n  }\n\n  return null;\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/huber/todo-app/src/components/todo/LoginComponent.js"],"names":["React","LoginComponent","Component","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","history","push","render","ShowInvalidCredentials","ShowLoginSuccessMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,MADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,kBAAkB,EAAE;AAJX,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AACV,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,KAAd;AAGH;;AAEDL,EAAAA,YAAY,GAAG;AACX,QAAG,KAAKP,KAAL,CAAWC,QAAX,KAAwB,MAAxB,IAAkC,KAAKD,KAAL,CAAWE,QAAX,KAAwB,MAA7D,EAAqE;AACjE,WAAKH,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,oBAAoC,KAAKd,KAAL,CAAWC,QAA/C;AACA,WAAKQ,QAAL,CAAc;AAACL,QAAAA,kBAAkB,EAAE;AAArB,OAAd;AACH,KAHD,MAGO;AACH,WAAKK,QAAL,CAAc;AAACL,QAAAA,kBAAkB,EAAE;AAArB,OAAd;AACA,WAAKK,QAAL,CAAc;AAACN,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACH;AACJ;;AAEDY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,sBAAD;AAAwB,MAAA,cAAc,EAAE,KAAKf,KAAL,CAAWG,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,uBAAD;AAAyB,MAAA,kBAAkB,EAAE,KAAKH,KAAL,CAAWI,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,gBAGc;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKI,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHd,gBAIc;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKG,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJd,EAKI;AAAQ,MAAA,OAAO,EAAE,KAAKE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CADJ;AASH;;AAxCwC;;AA6C7C,SAASS,sBAAT,CAAgCjB,KAAhC,EAAuC;AACnC,MAAGA,KAAK,CAACI,cAAT,EAAyB;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;;AACD,SAAO,IAAP;AACH;;AAED,SAASc,uBAAT,CAAiClB,KAAjC,EAAwC;AACpC,MAAGA,KAAK,CAACK,kBAAT,EAA6B;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACH;;AACD,SAAO,IAAP;AACH;;AAED,eAAeR,cAAf","sourcesContent":["import React from 'react';\n\nclass LoginComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: 'user',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.loginClicked = this.loginClicked.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ \n            [event.target.name]: event.target.value \n        });\n    }\n\n    loginClicked() {\n        if(this.state.username === 'user' && this.state.password === '1234') {\n            this.props.history.push(`/welcome/${this.state.username}`);\n            this.setState({showSuccessMessage: true});\n        } else {\n            this.setState({showSuccessMessage: false});\n            this.setState({hasLoginFailed: true});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed} />\n                <ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage} />\n                Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                <button onClick={this.loginClicked} >Login</button>\n            </div>\n        );\n    }\n\n\n}\n\nfunction ShowInvalidCredentials(props) {\n    if(props.hasLoginFailed) {\n        return <div>Invalid Credentials</div>;\n    }\n    return null;\n}\n\nfunction ShowLoginSuccessMessage(props) {\n    if(props.showSuccessMessage) {\n        return <div>Login Successful.</div>\n    }\n    return null;\n}\n\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}